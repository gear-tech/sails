name: "[js] Release"

on:
  push:
    branches:
      - master
    paths:
      - package.json

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-release:
    name: Check Release
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.release.outputs.skip }}
      version: ${{ steps.info.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: "Setup NodeJS 20.x"
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: "Get info"
        id: info
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          PREVIOUS_VERSION=$(npm show sails-js version || echo "0.0.0")
          echo "prev_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT

      - name: "Compare versions"
        id: release
        run: |
          if [ "${{ steps.info.outputs.version }}" == "${{ steps.info.outputs.prev_version }}" ]; then
            echo "No new version to release"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "New version to release"
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

  release-npm:
    name: Publish to NPM
    needs: check-release
    if: ${{ needs.check-release.outputs.skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: "Setup NodeJS 20.x"
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: "Prepare: install dependencies"
        run: yarn install

      - name: "Prepare: build pkgs"
        run: yarn build

      - name: "Configure npm auth"
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: "Publish sails-js-types"
        working-directory: js/types
        run: npm publish --access public

      - name: "Publish sails-js-util"
        working-directory: js/util
        run: npm publish --access public

      - name: "Publish sails-js-parser"
        working-directory: js/parser
        run: npm publish --access public

      - name: "Publish sails-js"
        working-directory: js
        run: npm publish --access public

      - name: "Publish sails-js-cli"
        working-directory: js/cli
        run: npm publish --access public

  release-gh:
    name: Create GH Release
    needs: check-release
    if: ${{ needs.check-release.outputs.skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: "Setup NodeJS 20.x"
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: "Get release notes"
        id: release_notes
        run: |
          awk "/## ${VERSION}/{flag=1;next}/---/{flag=0} flag" ./js/CHANGELOG.md >> release_notes.txt
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          rm release_notes.txt
        env:
          VERSION: ${{ needs.check-release.outputs.version }}

      - name: "Prepare: install dependencies"
        run: yarn install

      - name: "Prepare: build pkgs"
        run: yarn build

      - name: "Prepare: pack builds"
        run: yarn run pack

      - name: "Create new tag"
        run: |
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
        env:
          TAG_NAME: "js/v${{ needs.check-release.outputs.version }}"

      - name: "Create Release"
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.release_notes.outputs.release_notes }}
          tag_name: "js/v${{ needs.check-release.outputs.version }}"
          name: "Sails-JS v${{ needs.check-release.outputs.version }}"
          make_latest: false
          files: |
            js/sails-js.tgz
            js/sails-js-cli.tgz
            js/sails-js-parser.tgz
            js/sails-js-types.tgz
            js/sails-js-util.tgz
