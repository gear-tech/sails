[package]
name = "sails-rs"
description = "Main abstractions for the Sails framework"
documentation = "https://docs.rs/sails-rs"
readme = "../README.md"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true

[dependencies]
alloy-primitives = { workspace = true, optional = true }
alloy-sol-types = { workspace = true, optional = true }
convert-case = { workspace = true, optional = true }
futures.workspace = true
gear-core-errors.workspace = true
gcore.workspace = true
gprimitives.workspace = true
gstd = { workspace = true, optional = true }
gwasm-builder = { workspace = true, optional = true }
hashbrown.workspace = true
hex.workspace = true
keccak-const = { workspace = true, optional = true }
mockall = { workspace = true, optional = true }
parity-scale-codec = { workspace = true, features = ["derive"] }
pin-project-lite.workspace = true
sails-client-gen = { workspace = true, optional = true }
sails-idl-gen = { workspace = true, optional = true }
sails-idl-meta.workspace = true
sails-macros = { workspace = true, optional = true }
scale-info = { workspace = true, features = ["derive", "docs"] }
spin.workspace = true
thiserror-no-std.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
gear-core = { workspace = true, features = [
    "std",
], optional = true } # Needed for compilation of gstd in native mode
gclient = { workspace = true, optional = true }
gtest = { workspace = true, optional = true }
log = { workspace = true, optional = true }

[features]
default = ["gstd"]
build = ["std", "client-gen", "idl-gen", "dep:convert-case"]
debug = ["gstd?/debug"]
ethexe = [
    "gstd?/ethexe",
    "dep:alloy-primitives",
    "dep:alloy-sol-types",
    "dep:keccak-const",
    "sails-macros?/ethexe",
]
gclient = ["dep:gclient"]
gstd = ["dep:gstd", "dep:gear-core", "dep:sails-macros"]
gtest = ["std", "dep:gtest", "dep:log"]
client-gen = ["dep:sails-client-gen"]
idl-gen = ["dep:sails-idl-gen"]
mockall = ["std", "dep:mockall"]
std = ["futures/std"]
wasm-builder = ["dep:gwasm-builder"]
