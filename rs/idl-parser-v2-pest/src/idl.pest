WHITESPACE = _{ WHITE_SPACE | NEWLINE }
COMMENT    = _{ "//" ~ !"/" ~ (!NEWLINE ~ ANY)* }

// ---------- Lexemes ----------
Ident    = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }
Number   = @{ ASCII_DIGIT+ }
StrToEol = @{ (!NEWLINE ~ ANY)* }

// ---------- Annotations & docs ----------
GlobalAnn =  { WHITESPACE* ~ "!@" ~ Ident ~ (":" ~ StrToEol)? }
LocalAnn  =  { WHITESPACE* ~ "@" ~ Ident ~ (":" ~ StrToEol)? }
DocLine   = _{ WHITESPACE* ~ "///" ~ StrToEol }

Docs = { DocLine+ }
Anns = { LocalAnn+ }

// ---------- Types ----------
TypeDecl = _{ Tuple | Slice | Array | Option | Result | Primitive | PathType }

Primitive = { "bool" | "u8" | "i8" | "u16" | "i16" | "u32" | "i32" | "u64" | "i64" | "u128" | "i128" }

Tuple  = { "(" ~ (TypeDecl ~ ("," ~ TypeDecl)* ~ ","?)? ~ ")" }
Array  = { "[" ~ TypeDecl ~ ";" ~ Number ~ "]" }
Slice  = { "[" ~ TypeDecl ~ "]" }
Option = { "Option" ~ "<" ~ TypeDecl ~ ">" }
Result = { "Result" ~ "<" ~ TypeDecl ~ "," ~ TypeDecl ~ ">" }

PathType =  { Path ~ Generics? }
Path     = @{ Ident ~ ("::" ~ Ident)* }
Generics =  { "<" ~ TypeDecl ~ ("," ~ TypeDecl)* ~ ">" }

// ---------- Structs ----------
StructDecl = { Docs? ~ Anns? ~ "struct" ~ Ident ~ TypeParams? ~ (StructDef | TupleDef | UnitDef) }

StructDef = _{ "{" ~ Fields? ~ "}" ~ ";"? }
TupleDef  = _{ "(" ~ Fields? ~ ")" ~ ";"? }
UnitDef   = _{ ";" }

TypeParams = { "<" ~ Ident ~ ("," ~ Ident)* ~ ">" }
Fields     = { Field ~ ("," ~ Field)* ~ ","? }
Field      = { Docs? ~ Anns? ~ (Ident ~ ":")? ~ TypeDecl }

// ---------- Enums ----------
EnumDecl = { Docs? ~ Anns? ~ "enum" ~ Ident ~ TypeParams? ~ "{" ~ Variants? ~ "}" }
Variants = { Variant ~ ("," ~ Variant)* ~ ","? }
Variant  = { Docs? ~ Anns? ~ Ident ~ (StructDef | TupleDef)? }

// ---------- Aliases ----------
AliasDecl = { "alias" ~ Ident ~ TypeParams? ~ "=" ~ TypeDecl ~ ";" }

// ---------- Service ----------
ServiceDecl = { Docs? ~ Anns* ~ "service" ~ Ident ~ "{" ~ (ExtendsBlock | EventsBlock | FunctionsBlock | TypesBlock)* ~ "}" }

ExtendsBlock   = { "extends" ~ "{" ~ Ident ~ ("," ~ Ident)* ~ ","? ~ "}" }
EventsBlock    = { "events" ~ "{" ~ Variant ~ ("," ~ Variant)* ~ ","? ~ "}" }
FunctionsBlock = { "functions" ~ "{" ~ FuncDecl* ~ "}" }
TypesBlock     = { "types" ~ "{" ~ (StructDecl | EnumDecl | AliasDecl)* ~ "}" }

// ---------- Functions ----------
FuncDecl = { Docs? ~ Anns* ~ Ident ~ "(" ~ Params? ~ ")" ~ Ret? ~ Throws? ~ ";"? }
Params   = { Param ~ ("," ~ Param)* ~ ","? }
Param    = { Ident ~ ":" ~ TypeDecl }
Ret      = { "->" ~ TypeDecl }
Throws   = { "throws" ~ TypeDecl }

// ---------- Program ----------
ProgramDecl       = { Docs? ~ Anns? ~ "program" ~ Ident ~ "{" ~ (ConstructorsBlock | ServicesBlock | TypesBlock)* ~ "}" }
ConstructorsBlock = { "constructors" ~ "{" ~ CtorDecl* ~ "}" }
CtorDecl          = { Docs? ~ Anns? ~ Ident ~ "(" ~ Params? ~ ")" ~ ";"? }
ServicesBlock     = { "services" ~ "{" ~ (ServiceItem ~ ","?)* ~ "}" }
ServiceItem       = { Docs? ~ Anns? ~ Ident ~ (":" ~ Ident)? }

// ---------- Top level ----------
Top = { SOI ~ (GlobalAnn | ServiceDecl | ProgramDecl)* ~ EOI }
