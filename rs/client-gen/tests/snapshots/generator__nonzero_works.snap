---
source: rs/client-gen/tests/generator.rs
expression: "gen_client(idl, \"NonZeroParams\")"
---
// Code generated by sails-client-gen. DO NOT EDIT.
#[allow(unused_imports)]
use sails_rs::{client::*, collections::*, prelude::*};
pub struct NonZeroParamsProgram;
impl Program for NonZeroParamsProgram {}
pub trait NonZeroParams {
    type Env: GearEnv;
    fn non_zero_params(&self) -> Service<Self::Env, non_zero_params::NonZeroParamsImpl>;
}
impl<E: GearEnv> NonZeroParams for Actor<E, NonZeroParamsProgram> {
    type Env = E;
    fn non_zero_params(&self) -> Service<Self::Env, non_zero_params::NonZeroParamsImpl> {
        self.service(stringify!(NonZeroParams))
    }
}

pub mod non_zero_params {
    use super::*;
    pub trait NonZeroParams {
        type Env: GearEnv;
        fn do_this(&mut self, p1: NonZeroU256, p2: MyParam) -> PendingCall<Self::Env, io::DoThis>;
    }
    pub struct NonZeroParamsImpl;
    impl<E: GearEnv> NonZeroParams for Service<E, NonZeroParamsImpl> {
        type Env = E;
        fn do_this(&mut self, p1: NonZeroU256, p2: MyParam) -> PendingCall<Self::Env, io::DoThis> {
            self.pending_call((p1, p2))
        }
    }

    pub mod io {
        use super::*;
        sails_rs::io_struct_impl!(DoThis (p1: NonZeroU256, p2: super::MyParam) -> NonZeroU64);
    }
}
#[derive(PartialEq, Clone, Debug, Encode, Decode, TypeInfo)]
#[codec(crate = sails_rs::scale_codec)]
#[scale_info(crate = sails_rs::scale_info)]
pub struct MyParam {
    pub f1: NonZeroU256,
    pub f2: Vec<NonZeroU8>,
    pub f3: Option<(NonZeroU64, NonZeroU256)>,
}

#[cfg(feature = "with_mocks")]
#[cfg(not(target_arch = "wasm32"))]
extern crate std;

#[cfg(feature = "with_mocks")]
#[cfg(not(target_arch = "wasm32"))]
pub mod mockall {
    use super::*;
    use sails_rs::mockall::*;
    mock! { pub NonZeroParams {} #[allow(refining_impl_trait)] #[allow(clippy::type_complexity)] impl non_zero_params::NonZeroParams for NonZeroParams { type Env = GstdEnv; fn do_this (&mut self, p1: NonZeroU256, p2: MyParam) -> PendingCall<GstdEnv, non_zero_params::io::DoThis>; } }
}
