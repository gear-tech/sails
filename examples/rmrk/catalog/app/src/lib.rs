#![no_std]

use sails_macros::{gprogram, groute};
use sails_rtl::gstd::GStdExecContext;
use services::Catalog;

// Exposed publicly because of tests which use generated data
// while there is no generated client
pub mod services;

#[derive(Default)]
pub struct Program;

#[gprogram]
impl Program {
    // Initialize program and seed hosted services
    pub fn new() -> Self {
        let exec_context = GStdExecContext::default();
        Catalog::seed(exec_context);
        Self
    }

    // Expose hosted service
    #[groute("RmrkCatalog")]
    pub fn catalog(&self) -> Catalog<GStdExecContext> {
        let exec_context = GStdExecContext::default();
        Catalog::new(exec_context)
    }

    // Will be generated by the `ginject_defaults` macro from the `new` method
    fn __new(exec_context: GStdExecContext) -> Self {
        Catalog::seed(exec_context);
        Self
    }

    // Will be generated by the `ginject_defaults` macro from the `catalog` method
    fn __catalog(&self, exec_context: GStdExecContext) -> Catalog<GStdExecContext> {
        Catalog::new(exec_context)
    }
}
