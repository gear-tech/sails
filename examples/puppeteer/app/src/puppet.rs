// Code generated by sails-client-gen. DO NOT EDIT.
#![automatically_derived]
#![allow(unused)]
use gstd::prelude::*;
use parity_scale_codec::{Decode, Encode};
use sails_sender::{Call, GStdSender};
pub trait Service {
    fn do_this(
        &mut self,
        p1: u32,
        p2: String,
        p3: (Option<String>, u8),
        p4: ThisThatSvcAppTupleStruct,
    ) -> Call<(String, u32)>;
    fn do_that(
        &mut self,
        param: ThisThatSvcAppDoThatParam,
    ) -> Call<Result<(String, u32), (String,)>>;
    fn this(&self) -> Call<u32>;
    fn that(&self) -> Call<Result<String, String>>;
}

#[derive(Clone)]
pub struct Client<'a> {
    sender: &'a GStdSender,
}

impl<'a> Client<'a> {
    pub fn new(sender: &'a GStdSender) -> Self {
        Self { sender }
    }
}

impl<'a> Service for Client<'a> {
    fn do_this(
        &mut self,
        p1: u32,
        p2: String,
        p3: (Option<String>, u8),
        p4: ThisThatSvcAppTupleStruct,
    ) -> Call<(String, u32)> {
        Call::new("DoThis", (p1, p2, p3, p4))
    }
    fn do_that(
        &mut self,
        param: ThisThatSvcAppDoThatParam,
    ) -> Call<Result<(String, u32), (String,)>> {
        Call::new("DoThat", (param))
    }
    fn this(&self) -> Call<u32> {
        Call::new("This", ())
    }
    fn that(&self) -> Call<Result<String, String>> {
        Call::new("That", ())
    }
}
#[derive(PartialEq, Debug, Encode, Decode)]
pub struct ThisThatSvcAppTupleStruct(bool);
#[derive(PartialEq, Debug, Encode, Decode)]
pub struct ThisThatSvcAppDoThatParam {
    p1: u32,
    p2: String,
    p3: ThisThatSvcAppManyVariants,
}
#[derive(PartialEq, Debug, Encode, Decode)]
pub enum ThisThatSvcAppManyVariants {
    One,
    Two(u32),
    Three(Option<u32>),
    Four { a: u32, b: Option<u16> },
    Five((String, u32)),
    Six((u32,)),
}
