print-type-size type: `ffi::ast::visitor::Visitor`: 76 bytes, alignment: 1 bytes
print-type-size     field `.visit_ctor`: 4 bytes
print-type-size     field `.visit_service`: 4 bytes
print-type-size     field `.visit_type`: 4 bytes
print-type-size     field `.visit_vector_type_decl`: 4 bytes
print-type-size     field `.visit_array_type_decl`: 4 bytes
print-type-size     field `.visit_map_type_decl`: 4 bytes
print-type-size     field `.visit_optional_type_decl`: 4 bytes
print-type-size     field `.visit_result_type_decl`: 4 bytes
print-type-size     field `.visit_primitive_type_id`: 4 bytes
print-type-size     field `.visit_user_defined_type_id`: 4 bytes
print-type-size     field `.visit_ctor_func`: 4 bytes
print-type-size     field `.visit_service_func`: 4 bytes
print-type-size     field `.visit_service_event`: 4 bytes
print-type-size     field `.visit_func_param`: 4 bytes
print-type-size     field `.visit_func_output`: 4 bytes
print-type-size     field `.visit_struct_def`: 4 bytes
print-type-size     field `.visit_struct_field`: 4 bytes
print-type-size     field `.visit_enum_def`: 4 bytes
print-type-size     field `.visit_enum_variant`: 4 bytes
print-type-size type: `grammar::core::hash::sip::Hasher<grammar::core::hash::sip::Sip13Rounds>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.length`: 4 bytes
print-type-size     field `.ntail`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::hash::DefaultHasher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `std::hash::SipHasher13`: 64 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 64 bytes
print-type-size type: `grammar::__lalrpop_util::state_machine::Parser<grammar::__parse__Program::__StateMachine, std::iter::Map<lexer::Lexer<'_>, {closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:3040:45: 3040:48}>>`: 56 bytes, alignment: 4 bytes
print-type-size     field `.states`: 12 bytes
print-type-size     field `.symbols`: 12 bytes
print-type-size     field `.tokens`: 28 bytes
print-type-size     field `.last_location`: 4 bytes
print-type-size     field `.definition`: 0 bytes
print-type-size type: `std::option::Option<(usize, grammar::__parse__Program::__Symbol, usize)>`: 56 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `grammar::__parse__Program::__Symbol`: 48 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Variant17`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Variant37`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `Variant15`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Variant30`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Variant36`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Variant9`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Variant11`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Variant19`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Variant21`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Variant28`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Variant29`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Variant39`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Variant40`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Variant7`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Variant23`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Variant24`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Variant26`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Variant41`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Variant42`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Variant0`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant1`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant3`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant4`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant5`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant6`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant8`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant10`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant12`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant13`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant14`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant16`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant18`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant20`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant22`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant25`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant27`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant31`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant32`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant33`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant34`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant35`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant38`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Variant2`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `ast::ServiceFunc`: 44 bytes, alignment: 4 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.name`: 12 bytes
print-type-size     field `.params`: 12 bytes
print-type-size     field `.is_query`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `grammar::__lalrpop_util::ErrorRecovery<usize, lexer::Token, ast::ParseError>`: 44 bytes, alignment: 4 bytes
print-type-size     field `.dropped_tokens`: 12 bytes
print-type-size     field `.error`: 32 bytes
print-type-size type: `std::option::Option<ast::ServiceFunc>`: 44 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 44 bytes
print-type-size         field `.0`: 44 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ast::Program`: 36 bytes, alignment: 4 bytes
print-type-size     field `.services`: 12 bytes
print-type-size     field `.types`: 12 bytes
print-type-size     field `.ctor`: 12 bytes
print-type-size type: `ast::Service`: 36 bytes, alignment: 4 bytes
print-type-size     field `.name`: 12 bytes
print-type-size     field `.funcs`: 12 bytes
print-type-size     field `.events`: 12 bytes
print-type-size type: `grammar::__lalrpop_util::state_machine::NextToken<grammar::__parse__Program::__StateMachine>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Done`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `FoundToken`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 20 bytes, alignment: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size     variant `Eof`: 0 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 36 bytes, alignment: 4 bytes
print-type-size     field `.width`: 8 bytes
print-type-size     field `.precision`: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ast::ParseError>, ast::Program>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ast::ParseError>, ast::Service>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 4 bytes
print-type-size type: `std::option::Option<ast::Service>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<ast::Program, grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>>>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<ast::Program, ast::ParseError>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<ast::Program, grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<ast::Service, ast::ParseError>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<ast::Service, grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>>`: 36 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 36 bytes
print-type-size         field `.0`: 36 bytes
print-type-size     variant `Err`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 4 bytes
print-type-size type: `grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>`: 32 bytes, alignment: 4 bytes
print-type-size     variant `UnrecognizedToken`: 32 bytes
print-type-size         field `.expected`: 12 bytes
print-type-size         field `.token`: 20 bytes
print-type-size     variant `User`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.error`: 24 bytes, alignment: 4 bytes
print-type-size     variant `ExtraToken`: 24 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.token`: 20 bytes, alignment: 4 bytes
print-type-size     variant `UnrecognizedEof`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.expected`: 12 bytes, alignment: 4 bytes
print-type-size         field `.location`: 4 bytes
print-type-size     variant `InvalidToken`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.location`: 4 bytes, alignment: 4 bytes
print-type-size type: `grammar::core::fmt::rt::Placeholder`: 32 bytes, alignment: 4 bytes
print-type-size     field `.precision`: 8 bytes
print-type-size     field `.width`: 8 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.position`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `grammar::core::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `hashbrown::map::HashMap<std::string::String, (), std::hash::RandomState>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.table`: 16 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::raw::RawIter<(std::string::String, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.items`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `hashbrown::set::HashSet<std::string::String, std::hash::RandomState>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.map`: 32 bytes
print-type-size type: `std::collections::HashSet<std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.base`: 32 bytes
print-type-size type: `std::option::Option<std::result::Result<(usize, lexer::Token, usize), grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>>>`: 32 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(usize, lexer::Token, usize), grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>>`: 32 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 20 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<ast::Ctor, grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>>`: 32 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<ast::EnumDef, grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>>`: 32 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<ast::StructDef, grammar::__lalrpop_util::ParseError<usize, lexer::Token, ast::ParseError>>`: 32 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size type: `ast::EnumVariant`: 28 bytes, alignment: 4 bytes
print-type-size     field `.type_decl`: 16 bytes
print-type-size     field `.name`: 12 bytes
print-type-size type: `ast::FuncParam`: 28 bytes, alignment: 4 bytes
print-type-size     field `.type_decl`: 16 bytes
print-type-size     field `.name`: 12 bytes
print-type-size type: `ast::StructField`: 28 bytes, alignment: 4 bytes
print-type-size     field `.type_decl`: 16 bytes
print-type-size     field `.name`: 12 bytes
print-type-size type: `ast::Type`: 28 bytes, alignment: 4 bytes
print-type-size     field `.def`: 16 bytes
print-type-size     field `.name`: 12 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>`: 28 bytes, alignment: 4 bytes
print-type-size     field `.dropfn`: 12 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `lexer::Lexer<'_>`: 28 bytes, alignment: 4 bytes
print-type-size     field `.token_stream`: 28 bytes
print-type-size type: `logos::Lexer<'_, lexer::Token>`: 28 bytes, alignment: 4 bytes
print-type-size     field `.token`: 12 bytes
print-type-size     field `.source`: 8 bytes
print-type-size     field `.token_start`: 4 bytes
print-type-size     field `.token_end`: 4 bytes
print-type-size     field `.extras`: 0 bytes
print-type-size type: `logos::SpannedIter<'_, lexer::Token>`: 28 bytes, alignment: 4 bytes
print-type-size     field `.lexer`: 28 bytes
print-type-size type: `std::iter::Map<lexer::Lexer<'_>, {closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:3040:45: 3040:48}>`: 28 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 28 bytes
print-type-size     field `.f`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>>`: 28 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Break`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::option::Option<ast::EnumVariant>`: 28 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ast::FuncParam>`: 28 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ast::StructField>`: 28 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ast::Type>`: 28 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<(usize, lexer::Token, usize), ast::ParseError>>`: 28 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(usize, lexer::Token, usize), ast::ParseError>`: 28 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>`: 28 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `ast::CtorFunc`: 24 bytes, alignment: 4 bytes
print-type-size     field `.name`: 12 bytes
print-type-size     field `.params`: 12 bytes
print-type-size type: `ast::ParseError`: 24 bytes, alignment: 4 bytes
print-type-size     variant `DuplicateServiceMethod`: 24 bytes
print-type-size         field `.method`: 12 bytes
print-type-size         field `.service`: 12 bytes
print-type-size     variant `DuplicateType`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `DuplicateCtor`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `DuplicateService`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `DuplicateEnumVariant`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `DuplicateStructField`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Other`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Lexical`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `StructMixedFields`: 0 bytes
print-type-size type: `hashbrown::raw::FullBucketsIndices`: 24 bytes, alignment: 8 bytes
print-type-size     field `.current_group`: 8 bytes
print-type-size     field `.group_first_index`: 4 bytes
print-type-size     field `.items`: 4 bytes
print-type-size     field `.ctrl`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(std::string::String, ())>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.current_group`: 8 bytes
print-type-size     field `.next_ctrl`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size     field `.data`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 24 bytes, alignment: 4 bytes
print-type-size     field `.pieces`: 8 bytes
print-type-size     field `.args`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ast::ParseError>, ast::Ctor>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ast::ParseError>, ast::EnumDef>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ast::ParseError>, ast::StructDef>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::option::Option<(ast::Ctor, lexer::Token)>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ast::CtorFunc>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<ast::Ctor, ast::ParseError>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<ast::EnumDef, ast::ParseError>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<ast::StructDef, ast::ParseError>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, ast::ParseError>`: 24 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::hash::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::thread_local::lazy::LazyKeyInner<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::thread::local_impl::Key<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::iter::FilterMap<std::iter::Enumerate<std::slice::Iter<'_, &str>>, {closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:1459:50: 1459:69}>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 12 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::option::Option<(std::result::Result<lexer::Token, ()>, std::ops::Range<usize>)>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, lexer::Token, usize)>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ast::TypeDecl`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Id`: 16 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Def`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Array`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.item`: 4 bytes, alignment: 4 bytes
print-type-size         field `.len`: 4 bytes
print-type-size     variant `Map`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.key`: 4 bytes, alignment: 4 bytes
print-type-size         field `.value`: 4 bytes
print-type-size     variant `Result`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.ok`: 4 bytes, alignment: 4 bytes
print-type-size         field `.err`: 4 bytes
print-type-size     variant `Vector`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Optional`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `ast::TypeDef`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Struct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Enum`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `ffi::ast::ServiceFunc`: 16 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size     field `.name_ptr`: 4 bytes
print-type-size     field `.name_len`: 4 bytes
print-type-size     field `.is_query`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `hashbrown::raw::RawTable<(std::string::String, ())>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.table`: 16 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `hashbrown::raw::RawTableInner`: 16 bytes, alignment: 4 bytes
print-type-size     field `.ctrl`: 4 bytes
print-type-size     field `.bucket_mask`: 4 bytes
print-type-size     field `.growth_left`: 4 bytes
print-type-size     field `.items`: 4 bytes
print-type-size type: `std::any::TypeId`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ffi::NulError`: 16 bytes, alignment: 4 bytes
print-type-size     field `.1`: 12 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::hash::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::iter::Enumerate<std::slice::Iter<'_, &str>>, {closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:1444:50: 1444:69}>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 12 bytes
print-type-size     field `.f`: 4 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.step_minus_one`: 4 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::option::Option<ast::TypeDecl>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.file`: 8 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::ffi::CString, std::ffi::NulError>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `ast::Ctor`: 12 bytes, alignment: 4 bytes
print-type-size     field `.funcs`: 12 bytes
print-type-size type: `ast::EnumDef`: 12 bytes, alignment: 4 bytes
print-type-size     field `.variants`: 12 bytes
print-type-size type: `ast::StructDef`: 12 bytes, alignment: 4 bytes
print-type-size     field `.fields`: 12 bytes
print-type-size type: `ast::TypeId`: 12 bytes, alignment: 4 bytes
print-type-size     variant `UserDefined`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Primitive`: 5 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `ffi::ast::CtorFunc`: 12 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size     field `.name_ptr`: 4 bytes
print-type-size     field `.name_len`: 4 bytes
print-type-size type: `ffi::ast::EnumVariant`: 12 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size     field `.name_ptr`: 4 bytes
print-type-size     field `.name_len`: 4 bytes
print-type-size type: `ffi::ast::FuncParam`: 12 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size     field `.name_ptr`: 4 bytes
print-type-size     field `.name_len`: 4 bytes
print-type-size type: `ffi::ast::ParseResult`: 12 bytes, alignment: 4 bytes
print-type-size     field `.program`: 4 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `ffi::ast::Service`: 12 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size     field `.name_ptr`: 4 bytes
print-type-size     field `.name_len`: 4 bytes
print-type-size type: `ffi::ast::StructField`: 12 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size     field `.name_ptr`: 4 bytes
print-type-size     field `.name_len`: 4 bytes
print-type-size type: `ffi::ast::Type`: 12 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size     field `.name_ptr`: 4 bytes
print-type-size     field `.name_len`: 4 bytes
print-type-size type: `grammar::__lalrpop_util::state_machine::SimulatedReduce<grammar::__parse__Program::__StateMachine>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Reduce`: 8 bytes
print-type-size         field `.states_to_pop`: 4 bytes
print-type-size         field `.nonterminal_produced`: 4 bytes
print-type-size     variant `Accept`: 0 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     field `.dropfn`: 8 bytes
print-type-size type: `lexer::Token`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Id`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Num`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Equals`: 0 bytes
print-type-size     variant `LParen`: 0 bytes
print-type-size     variant `RParen`: 0 bytes
print-type-size     variant `LBrace`: 0 bytes
print-type-size     variant `RBrace`: 0 bytes
print-type-size     variant `LBracket`: 0 bytes
print-type-size     variant `RBracket`: 0 bytes
print-type-size     variant `Semicolon`: 0 bytes
print-type-size     variant `Colon`: 0 bytes
print-type-size     variant `Comma`: 0 bytes
print-type-size     variant `Arrow`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size     variant `Ctor`: 0 bytes
print-type-size     variant `Service`: 0 bytes
print-type-size     variant `Events`: 0 bytes
print-type-size     variant `Query`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Opt`: 0 bytes
print-type-size     variant `Result`: 0 bytes
print-type-size     variant `Vec`: 0 bytes
print-type-size     variant `Map`: 0 bytes
print-type-size type: `std::fmt::DebugTuple<'_, '_>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.fields`: 4 bytes
print-type-size     field `.fmt`: 4 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, &str>>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.count`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::result::Result<lexer::Token, ()>>>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.value`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::string::String, std::convert::Infallible>>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::string::String, std::convert::Infallible>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::string::String>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ast::Ctor>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lexer::Token>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<lexer::Token, ()>>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<ast::EnumVariant>>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<ast::Type>>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<grammar::alloc::raw_vec::RawVec<i16>, std::collections::TryReserveError>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<grammar::alloc::raw_vec::RawVec<std::string::String>, std::collections::TryReserveError>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<grammar::alloc::raw_vec::RawVec<u8>, std::collections::TryReserveError>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lexer::Token, ()>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::string::String`: 12 bytes, alignment: 4 bytes
print-type-size     field `.vec`: 12 bytes
print-type-size type: `std::vec::Vec<(usize, grammar::__parse__Program::__Symbol, usize)>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<(usize, lexer::Token, usize)>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<ast::CtorFunc>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<ast::EnumVariant>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<ast::FuncParam>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<ast::Service>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<ast::ServiceFunc>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<ast::StructField>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<ast::Type>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<i16>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `std::vec::Vec<u8>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::prepare_resize<std::alloc::Global>::{closure#0}}`: 12 bytes, alignment: 4 bytes
print-type-size     end padding: 12 bytes
print-type-size type: `{closure@std::iter::Iterator::for_each::call<i16, {closure@std::vec::Vec<i16>::extend_trusted<std::option::IntoIter<i16>>::{closure#0}}>::{closure#0}}`: 12 bytes, alignment: 4 bytes
print-type-size     end padding: 12 bytes
print-type-size type: `{closure@std::vec::Vec<i16>::extend_trusted<std::option::IntoIter<i16>>::{closure#0}}`: 12 bytes, alignment: 4 bytes
print-type-size     end padding: 12 bytes
print-type-size type: `ffi::ast::AcceptResult`: 8 bytes, alignment: 4 bytes
print-type-size     field `.error`: 8 bytes
print-type-size type: `ffi::ast::Error`: 8 bytes, alignment: 4 bytes
print-type-size     field `.code`: 4 bytes
print-type-size     field `.details`: 4 bytes
print-type-size type: `ffi::ast::visitor::wrapper::VisitorWrapper<'_>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.visitor`: 4 bytes
print-type-size     field `.context`: 4 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<(usize, grammar::__parse__Program::__Symbol, usize)>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<(usize, lexer::Token, usize)>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<ast::CtorFunc>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<ast::EnumVariant>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<ast::FuncParam>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<ast::Service>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<ast::ServiceFunc>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<ast::StructField>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<ast::Type>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<i16>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<std::string::String>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::RawVec<u8>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.cap`: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size type: `grammar::core::fmt::builders::DebugInner<'_, '_>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.fmt`: 4 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `grammar::core::fmt::rt::Argument<'_>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size type: `grammar::core::fmt::rt::ArgumentType<'_>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Placeholder`: 8 bytes
print-type-size         field `.value`: 4 bytes
print-type-size         field `.formatter`: 4 bytes
print-type-size     variant `Count`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `grammar::core::fmt::rt::Count`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Is`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Param`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `grammar::core::num::nonzero::private::NonZeroU64Inner`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::TryReserveError`: 8 bytes, alignment: 4 bytes
print-type-size     variant `AllocError`: 8 bytes
print-type-size         field `.layout`: 8 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pos`: 4 bytes
print-type-size     field `.stride`: 4 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 8 bytes, alignment: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.ctrl_align`: 4 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMask`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMaskIter`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::generic::Group`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::generic::Group::static_empty::AlignedBytes`: 8 bytes, alignment: 8 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.bytes`: 8 bytes
print-type-size type: `std::alloc::Layout`: 8 bytes, alignment: 4 bytes
print-type-size     field `.align`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `std::boxed::Box<[ast::CtorFunc]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::EnumVariant]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::FuncParam]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::ServiceFunc]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::Service]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::StructField]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::Type]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[i16]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 8 bytes, alignment: 4 bytes
print-type-size     field `.kind`: 8 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 8 bytes, alignment: 4 bytes
print-type-size     variant `AllocError`: 8 bytes
print-type-size         field `.layout`: 8 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[ast::CtorFunc]>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[ast::EnumVariant]>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[ast::FuncParam]>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[ast::ServiceFunc]>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[ast::Service]>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[ast::StructField]>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[ast::Type]>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[i16]>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZero<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::option::Option<&[grammar::core::fmt::rt::Placeholder]>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&dyn std::error::Error>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[&str]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[ast::CtorFunc]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[ast::EnumVariant]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[ast::FuncParam]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[ast::ServiceFunc]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[ast::Service]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[ast::StructField]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[ast::Type]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[i16]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[ast::CtorFunc]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::EnumVariant]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::FuncParam]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::ServiceFunc]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::Service]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::StructField]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::Type]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[i16]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(usize, grammar::__parse__Program::__Symbol, usize)]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.data_pointer`: 4 bytes
print-type-size     field `.metadata`: 4 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[i16]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.data_pointer`: 4 bytes
print-type-size     field `.metadata`: 4 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.data_pointer`: 4 bytes
print-type-size     field `.metadata`: 4 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(usize, grammar::__parse__Program::__Symbol, usize)]>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[i16]>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<ffi::ast::visitor::wrapper::VisitorWrapper<'_>, *mut ffi::ast::AcceptResult>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<hashbrown::raw::Bucket<(std::string::String, ())>, hashbrown::raw::InsertSlot>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, hashbrown::raw::InsertSlot>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::CtorFunc>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::EnumVariant>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::FuncParam>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::Service>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::ServiceFunc>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::StructField>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ast::Type>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size     field `.end_or_len`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::str::Utf8Error`: 8 bytes, alignment: 4 bytes
print-type-size     field `.valid_up_to`: 4 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size     field `.local_len`: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:1459:50: 1459:69}`: 8 bytes, alignment: 4 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &&str, (), std::ops::ControlFlow<std::string::String>, {closure@std::iter::Iterator::find_map::check<(usize, &&str), std::string::String, &mut {closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:1444:50: 1444:69}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 4 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &&str, (), std::ops::ControlFlow<std::string::String>, {closure@std::iter::Iterator::find_map::check<(usize, &&str), std::string::String, &mut {closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:1459:50: 1459:69}>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 4 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, ())>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, ()>::{closure#0}}, {closure@hashbrown::map::make_hasher<std::string::String, (), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 8 bytes, alignment: 4 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}`: 8 bytes, alignment: 4 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `ffi::ast::Ctor`: 4 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size type: `ffi::ast::EnumDef`: 4 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size type: `ffi::ast::ErrorCode`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size     variant `InvalidIDL`: 0 bytes
print-type-size     variant `ParseError`: 0 bytes
print-type-size     variant `NullPtr`: 0 bytes
print-type-size type: `ffi::ast::Ptr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `ffi::ast::StructDef`: 4 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size type: `ffi::ast::TypeDecl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.raw_ptr`: 4 bytes
print-type-size type: `grammar::alloc::raw_vec::Cap`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `grammar::core::num::nonzero::private::NonZeroUsizeInner`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `hashbrown::raw::Bucket<(std::string::String, ())>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.ptr`: 4 bytes
print-type-size type: `hashbrown::raw::InsertSlot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size type: `std::boxed::Box<[ast::CtorFunc; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::EnumVariant; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::FuncParam; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::Service; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::ServiceFunc; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::StructField; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[ast::Type; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<[i16; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<ast::Program>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<ast::TypeDecl>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<ffi::ast::AcceptResult>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::boxed::Box<ffi::ast::ParseResult>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<ast::Program>>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<ffi::ast::AcceptResult>>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<ffi::ast::ParseResult>>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::num::NonZero<usize>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeToInclusive<usize>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::option::IntoIter<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::option::Item<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     field `.opt`: 4 bytes
print-type-size type: `std::option::Option<&&ast::TypeDecl>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&str>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(usize, grammar::__parse__Program::__Symbol, usize)>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(usize, lexer::Token, usize)>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 10]>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 16]>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 2]>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 3]>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 4]>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8; 5]>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::Ctor>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::CtorFunc>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::EnumDef>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::EnumVariant>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::FuncParam>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::Program>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::Service>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::ServiceFunc>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::StructDef>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::StructField>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::Type>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ast::TypeDecl>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::Ctor>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::CtorFunc>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::EnumDef>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::EnumVariant>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::FuncParam>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::Service>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::ServiceFunc>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::StructDef>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::StructField>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::Type>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::TypeDecl>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ffi::ast::visitor::Visitor>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&i16>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&usize>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fn(*mut u8)>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(std::string::String, ())>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZero<usize>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.vtable_ptr`: 4 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn grammar::core::error::Erased<'_>>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.vtable_ptr`: 4 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.vtable_ptr`: 4 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.vtable_ptr`: 4 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.vtable_ptr`: 4 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.vtable_ptr`: 4 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, ())>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<(usize, grammar::__parse__Program::__Symbol, usize)>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<(usize, lexer::Token, usize)>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<[ast::CtorFunc; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<[ast::EnumVariant; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<[ast::FuncParam; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<[ast::Service; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<[ast::ServiceFunc; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<[ast::StructField; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<[ast::Type; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<[i16; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::CtorFunc>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::EnumVariant>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::FuncParam>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::Program>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::Service>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::ServiceFunc>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::StructField>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::Type>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ast::TypeDecl>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ffi::ast::AcceptResult>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<ffi::ast::ParseResult>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<i16>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size type: `std::ptr::Unique<(usize, grammar::__parse__Program::__Symbol, usize)>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<(usize, lexer::Token, usize)>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::CtorFunc; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::EnumVariant; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::FuncParam; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::Service; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::ServiceFunc; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::StructField; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[ast::Type; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<[i16; 1]>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::CtorFunc>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::EnumVariant>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::FuncParam>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Program>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Service>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::ServiceFunc>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::StructField>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::Type>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ast::TypeDecl>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ffi::ast::AcceptResult>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<ffi::ast::ParseResult>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<i16>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::Unique<u8>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pointer`: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:1444:50: 1444:69}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:4038:66: 4038:68}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5582:58: 5582:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5611:58: 5611:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5777:58: 5777:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5808:58: 5808:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5889:58: 5889:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5970:58: 5970:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6051:58: 6051:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6249:58: 6249:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6280:58: 6280:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6361:58: 6361:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6442:58: 6442:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6523:58: 6523:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6621:58: 6621:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6730:58: 6730:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6792:58: 6792:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6839:58: 6839:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6868:58: 6868:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6946:58: 6946:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7007:58: 7007:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7051:58: 7051:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7112:58: 7112:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7173:58: 7173:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7234:58: 7234:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7312:58: 7312:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7356:58: 7356:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7565:58: 7565:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7627:58: 7627:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7675:58: 7675:60}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@hashbrown::map::equivalent_key<std::string::String, std::string::String, ()>::{closure#0}}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@hashbrown::map::make_hasher<std::string::String, (), std::hash::RandomState>::{closure#0}}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@hashbrown::raw::RawTable<(std::string::String, ())>::reserve_rehash<{closure@hashbrown::map::make_hasher<std::string::String, (), std::hash::RandomState>::{closure#0}}>::{closure#0}}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@std::fmt::format::{closure#0}}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@std::hash::RandomState::new::KEYS::__getit::{closure#0}}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@std::iter::Iterator::find_map::check<(usize, &&str), std::string::String, &mut {closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:1444:50: 1444:69}>::{closure#0}}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `{closure@std::iter::Iterator::find_map::check<(usize, &&str), std::string::String, &mut {closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:1459:50: 1459:69}>::{closure#0}}`: 4 bytes, alignment: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `<lexer::Token as logos::Logos<'s>>::lex::goto47_ctx27_x::Jump`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__`: 0 bytes
print-type-size     variant `J28`: 0 bytes
print-type-size     variant `J52`: 0 bytes
print-type-size     variant `J50`: 0 bytes
print-type-size type: `<lexer::Token as logos::Logos<'s>>::lex::goto61_ctx27_x::Jump`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__`: 0 bytes
print-type-size     variant `J28`: 0 bytes
print-type-size     variant `J64`: 0 bytes
print-type-size     variant `J67`: 0 bytes
print-type-size type: `<lexer::Token as logos::Logos<'s>>::lex::goto87::Jump`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__`: 0 bytes
print-type-size     variant `J5`: 0 bytes
print-type-size     variant `J7`: 0 bytes
print-type-size     variant `J33`: 0 bytes
print-type-size     variant `J35`: 0 bytes
print-type-size     variant `J82`: 0 bytes
print-type-size     variant `J13`: 0 bytes
print-type-size     variant `J28`: 0 bytes
print-type-size     variant `J79`: 0 bytes
print-type-size     variant `J47`: 0 bytes
print-type-size     variant `J9`: 0 bytes
print-type-size     variant `J73`: 0 bytes
print-type-size     variant `J11`: 0 bytes
print-type-size     variant `J85`: 0 bytes
print-type-size     variant `J4`: 0 bytes
print-type-size     variant `J6`: 0 bytes
print-type-size     variant `J70`: 0 bytes
print-type-size     variant `J2`: 0 bytes
print-type-size     variant `J61`: 0 bytes
print-type-size     variant `J12`: 0 bytes
print-type-size     variant `J31`: 0 bytes
print-type-size     variant `J44`: 0 bytes
print-type-size     variant `J76`: 0 bytes
print-type-size     variant `J8`: 0 bytes
print-type-size     variant `J10`: 0 bytes
print-type-size type: `ast::PrimitiveType`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `Bool`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `U8`: 0 bytes
print-type-size     variant `U16`: 0 bytes
print-type-size     variant `U32`: 0 bytes
print-type-size     variant `U64`: 0 bytes
print-type-size     variant `U128`: 0 bytes
print-type-size     variant `I8`: 0 bytes
print-type-size     variant `I16`: 0 bytes
print-type-size     variant `I32`: 0 bytes
print-type-size     variant `I64`: 0 bytes
print-type-size     variant `I128`: 0 bytes
print-type-size     variant `ActorId`: 0 bytes
print-type-size     variant `CodeId`: 0 bytes
print-type-size     variant `MessageId`: 0 bytes
print-type-size     variant `H256`: 0 bytes
print-type-size     variant `U256`: 0 bytes
print-type-size type: `grammar::alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `grammar::core::fmt::rt::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<ast::PrimitiveType>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `grammar::__parse__Program::ProgramParser`: 0 bytes, alignment: 1 bytes
print-type-size     field `._priv`: 0 bytes
print-type-size type: `grammar::__parse__Program::__StateMachine`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__phantom`: 0 bytes
print-type-size type: `grammar::core::error::private::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `lexer::LexicalError`: 0 bytes, alignment: 1 bytes
print-type-size     variant `InvalidToken`: 0 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::error::Request<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::CtorFunc>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::EnumVariant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::FuncParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Service>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::ServiceFunc>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::StructField>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ast::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(usize, grammar::__parse__Program::__Symbol, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(usize, lexer::Token, usize)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::CtorFunc; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::CtorFunc]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::EnumVariant; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::EnumVariant]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::FuncParam; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::FuncParam]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::Service; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::ServiceFunc; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::ServiceFunc]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::Service]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::StructField; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::StructField]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::Type; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[ast::Type]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[i16; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[i16]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::CtorFunc>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::EnumVariant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::FuncParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Program>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Service>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::ServiceFunc>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::StructField>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ast::TypeDecl>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn grammar::core::error::Erased<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ffi::ast::AcceptResult>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ffi::ast::ParseResult>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<grammar::core::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<i16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:3040:45: 3040:48}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:4038:90: 4038:93}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5582:82: 5582:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5611:82: 5611:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5777:82: 5777:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5808:82: 5808:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5889:82: 5889:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:5970:82: 5970:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6051:82: 6051:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6249:82: 6249:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6280:82: 6280:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6361:82: 6361:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6442:82: 6442:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6523:82: 6523:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6621:82: 6621:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6730:82: 6730:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6792:82: 6792:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6839:82: 6839:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6868:82: 6868:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:6946:82: 6946:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7007:82: 7007:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7051:82: 7051:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7112:82: 7112:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7173:82: 7173:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7234:82: 7234:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7312:82: 7312:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7356:82: 7356:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7565:82: 7565:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7627:82: 7627:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7675:82: 7675:85}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@/home/coder/gear/sails/target/wasm32-unknown-unknown/release/build/sails-idl-parser-8c0204d8885673e5/out/grammar.rs:7874:22: 7874:25}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@idl-parser/src/ast/mod.rs:356:45: 356:48}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@idl-parser/src/ast/mod.rs:357:43: 357:46}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@idl-parser/src/ast/mod.rs:37:47: 37:50}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@idl-parser/src/ffi/ast/visitor.rs:713:67: 713:70}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@idl-parser/src/ffi/ast/visitor.rs:715:71: 715:74}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@idl-parser/src/ffi/ast/visitor.rs:716:61: 716:64}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@idl-parser/src/lexer.rs:33:38: 33:53}`: 0 bytes, alignment: 1 bytes
print-type-size type: `{closure@std::hash::RandomState::new::{closure#0}}`: 0 bytes, alignment: 1 bytes
