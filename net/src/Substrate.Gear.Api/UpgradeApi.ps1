# See comments below about Substrate.DotNet version.
# Run this script from the directory where it is:
#   powershell -ExecutionPolicy Bypass -File UpgradeApi.ps1 UpgradeApi.ps1

param (
    [string]$gearPath,
    [string]$projectName = 'Substrate.Gear.Api' # Project name should always start from Substrate and never end on Client otherwise generated code doesn't compile
)

$webSocketConfig = if ([string]::IsNullOrEmpty($gearPath)) {
    '"websocket": "wss://rpc.vara.network",'
}
else {
    '"websocket": "ws://127.0.0.1:9944",'
}

$webSocketUrl = if ([string]::IsNullOrEmpty($gearPath)) {
    'wss://rpc.vara.network'
}
else {
    'ws://127.0.0.1:9944'
}

$substrateConfigContent = @"
  {
    "projects": {
      "net_api":         "$projectName",
      "rest_service":    "$projectName.RestService",
      "rest_client":     "$projectName.RestClient",
      "net_integration": "$projectName.NetIntegration"
    },
    "metadata": {
      "websocket": "$webSocketUrl",
    },
    "rest_client_settings": {
      "service_assembly": "$projectName.RestService.dll"
    }
  }
"@;

Write-Output $substrateConfigContent

# Code generated by the tool should be compatible with
# Substrate.NET.API 0.9.23. Version 0.9.24-rcX doesn't seem
# to work properly with Gear Node.
dotnet tool install --global Substrate.DotNet --version 0.6.9 --allow-downgrade

$gearProcess = if (![string]::IsNullOrEmpty($gearPath)) {
    Start-Process -FilePath $gearPath -ArgumentList "--dev" -PassThru -WindowStyle Hidden
    # Wait a bit till node starts
    Start-Sleep -Seconds 5
}

try {
    Remove-Item -Path "bin" -Recurse -Force
    Remove-Item -Path "obj" -Recurse -Force

    Set-Location -Path ..

    Set-Content -Path '.\.substrate\substrate-config.json' -Value $substrateConfigContent

    substrate upgrade

    # Remove unnecessary projects
    if (Test-Path "$projectName.NetIntegration") {
        Remove-Item -Path "$projectName.NetIntegration" -Recurse -Force
    }
    if (Test-Path "$projectName.RestClient") {
        Remove-Item -Path "$projectName.RestClient" -Recurse -Force
    }
    if (Test-Path "$projectName.RestService") {
        Remove-Item -Path "$projectName.RestService" -Recurse -Force
    }

    Set-Location -Path "$projectName"

    # Fix broken code generation
    .\ReplacePattern.ps1 -directory '.' -fileType '*.cs' -searchPattern '\.event\.' -replacePattern '.@event.'
    .\ReplacePattern.ps1 -directory '.' -fileType '*.cs' -searchPattern '\.internal\.' -replacePattern '.@internal.'

    # Disable NRT
    .\AddFileHeader.ps1 -directory '.' -fileType '*.cs' -header '#nullable disable'
}
finally {
    if ($null -ne $gearProcess -and !$gearProcess.HasExited) {
        Stop-Process -Id $gearProcess.Id
    }
}
