#nullable disable
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Gear.Api.Generated.Storage
{
    
    
    /// <summary>
    /// >> GearVoucherStorage
    /// </summary>
    public sealed class GearVoucherStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> GearVoucherStorage Constructor
        /// </summary>
        public GearVoucherStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("GearVoucher", "Issued"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("GearVoucher", "Vouchers"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Identity,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId>), typeof(Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherInfo)));
        }
        
        /// <summary>
        /// >> IssuedParams
        ///  Storage containing amount of the total vouchers issued.
        /// 
        ///  Used as nonce in voucher creation.
        /// </summary>
        public static string IssuedParams()
        {
            return RequestGenerator.GetStorage("GearVoucher", "Issued", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> IssuedDefault
        /// Default value as hex string
        /// </summary>
        public static string IssuedDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Issued
        ///  Storage containing amount of the total vouchers issued.
        /// 
        ///  Used as nonce in voucher creation.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> Issued(string blockhash, CancellationToken token)
        {
            string parameters = GearVoucherStorage.IssuedParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> VouchersParams
        ///  Double map storage containing data of the voucher,
        ///  associated with some spender and voucher ids.
        /// </summary>
        public static string VouchersParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId> key)
        {
            return RequestGenerator.GetStorage("GearVoucher", "Vouchers", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Identity,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, key.Value);
        }
        
        /// <summary>
        /// >> VouchersDefault
        /// Default value as hex string
        /// </summary>
        public static string VouchersDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Vouchers
        ///  Double map storage containing data of the voucher,
        ///  associated with some spender and voucher ids.
        /// </summary>
        public async Task<Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherInfo> Vouchers(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId> key, string blockhash, CancellationToken token)
        {
            string parameters = GearVoucherStorage.VouchersParams(key);
            var result = await _client.GetStorageAsync<Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherInfo>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> GearVoucherCalls
    /// </summary>
    public sealed class GearVoucherCalls
    {
        
        /// <summary>
        /// >> issue
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Issue(Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32 spender, Substrate.NetApi.Model.Types.Primitive.U128 balance, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Gear.Api.Generated.Types.Base.BTreeSetT1> programs, Substrate.NetApi.Model.Types.Primitive.Bool code_uploading, Substrate.NetApi.Model.Types.Primitive.U32 duration)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(spender.Encode());
            byteArray.AddRange(balance.Encode());
            byteArray.AddRange(programs.Encode());
            byteArray.AddRange(code_uploading.Encode());
            byteArray.AddRange(duration.Encode());
            return new Method(107, "GearVoucher", 0, "issue", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> call
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Call(Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId voucher_id, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.EnumPrepaidCall call)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(voucher_id.Encode());
            byteArray.AddRange(call.Encode());
            return new Method(107, "GearVoucher", 1, "call", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> revoke
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Revoke(Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32 spender, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId voucher_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(spender.Encode());
            byteArray.AddRange(voucher_id.Encode());
            return new Method(107, "GearVoucher", 2, "revoke", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> update
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Update(Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32 spender, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId voucher_id, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32> move_ownership, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> balance_top_up, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Gear.Api.Generated.Types.Base.BTreeSetT1>> append_programs, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> code_uploading, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> prolong_duration)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(spender.Encode());
            byteArray.AddRange(voucher_id.Encode());
            byteArray.AddRange(move_ownership.Encode());
            byteArray.AddRange(balance_top_up.Encode());
            byteArray.AddRange(append_programs.Encode());
            byteArray.AddRange(code_uploading.Encode());
            byteArray.AddRange(prolong_duration.Encode());
            return new Method(107, "GearVoucher", 3, "update", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> decline
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Decline(Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId voucher_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(voucher_id.Encode());
            return new Method(107, "GearVoucher", 4, "decline", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> GearVoucherConstants
    /// </summary>
    public sealed class GearVoucherConstants
    {
        
        /// <summary>
        /// >> PalletId
        ///  The pallet id, used for deriving its sovereign account ID.
        /// </summary>
        public Substrate.Gear.Api.Generated.Model.frame_support.PalletId PalletId()
        {
            var result = new Substrate.Gear.Api.Generated.Model.frame_support.PalletId();
            result.Create("0x70792F766F756368");
            return result;
        }
        
        /// <summary>
        /// >> MaxProgramsAmount
        ///  Maximal amount of programs to be specified to interact with.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U8 MaxProgramsAmount()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U8();
            result.Create("0x20");
            return result;
        }
        
        /// <summary>
        /// >> MinDuration
        ///  Minimal duration in blocks voucher could be issued/prolonged for.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MinDuration()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x14000000");
            return result;
        }
        
        /// <summary>
        /// >> MaxDuration
        ///  Maximal duration in blocks voucher could be issued/prolonged for.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxDuration()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x00EA2400");
            return result;
        }
    }
    
    /// <summary>
    /// >> GearVoucherErrors
    /// </summary>
    public enum GearVoucherErrors
    {
        
        /// <summary>
        /// >> BadOrigin
        /// The origin is not eligible to execute call.
        /// </summary>
        BadOrigin,
        
        /// <summary>
        /// >> BalanceTransfer
        /// Error trying transfer balance to/from voucher account.
        /// </summary>
        BalanceTransfer,
        
        /// <summary>
        /// >> InappropriateDestination
        /// Destination program is not in whitelisted set for voucher.
        /// </summary>
        InappropriateDestination,
        
        /// <summary>
        /// >> InexistentVoucher
        /// Voucher with given identifier doesn't exist for given spender id.
        /// </summary>
        InexistentVoucher,
        
        /// <summary>
        /// >> IrrevocableYet
        /// Voucher still valid and couldn't be revoked.
        /// </summary>
        IrrevocableYet,
        
        /// <summary>
        /// >> MaxProgramsLimitExceeded
        /// Try to whitelist more programs than allowed.
        /// </summary>
        MaxProgramsLimitExceeded,
        
        /// <summary>
        /// >> UnknownDestination
        /// Failed to query destination of the prepaid call.
        /// </summary>
        UnknownDestination,
        
        /// <summary>
        /// >> VoucherExpired
        /// Voucher has expired and couldn't be used.
        /// </summary>
        VoucherExpired,
        
        /// <summary>
        /// >> DurationOutOfBounds
        /// Voucher issue/prolongation duration out of [min; max] constants.
        /// </summary>
        DurationOutOfBounds,
        
        /// <summary>
        /// >> CodeUploadingEnabled
        /// Voucher update function tries to cut voucher ability of code upload.
        /// </summary>
        CodeUploadingEnabled,
        
        /// <summary>
        /// >> CodeUploadingDisabled
        /// Voucher is disabled for code uploading, but requested.
        /// </summary>
        CodeUploadingDisabled,
    }
}
