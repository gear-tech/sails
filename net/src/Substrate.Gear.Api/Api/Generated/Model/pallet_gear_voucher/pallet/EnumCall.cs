#nullable disable
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> issue
        /// Issue a new voucher.
        /// 
        /// Deposits event `VoucherIssued`, that contains `VoucherId` to be
        /// used by spender for balance-less on-chain interactions.
        /// 
        /// Arguments:
        /// * spender:  user id that is eligible to use the voucher;
        /// * balance:  voucher balance could be used for transactions
        ///             fees and gas;
        /// * programs: pool of programs spender can interact with,
        ///             if None - means any program,
        ///             limited by Config param;
        /// * code_uploading:
        ///             allow voucher to be used as payer for `upload_code`
        ///             transactions fee;
        /// * duration: amount of blocks voucher could be used by spender
        ///             and couldn't be revoked by owner.
        ///             Must be out in [MinDuration; MaxDuration] constants.
        ///             Expiration block of the voucher calculates as:
        ///             current bn (extrinsic exec bn) + duration + 1.
        /// </summary>
        issue = 0,
        
        /// <summary>
        /// >> call
        /// Execute prepaid call with given voucher id.
        /// 
        /// Arguments:
        /// * voucher_id: associated with origin existing vouchers id,
        ///               that should be used to pay for fees and gas
        ///               within the call;
        /// * call:       prepaid call that is requested to execute.
        /// </summary>
        call = 1,
        
        /// <summary>
        /// >> revoke
        /// Revoke existing voucher.
        /// 
        /// This extrinsic revokes existing voucher, if current block is greater
        /// than expiration block of the voucher (it is no longer valid).
        /// 
        /// Currently it means sending of all balance from voucher account to
        /// voucher owner without voucher removal from storage map, but this
        /// behavior may change in future, as well as the origin validation:
        /// only owner is able to revoke voucher now.
        /// 
        /// Arguments:
        /// * spender:    account id of the voucher spender;
        /// * voucher_id: voucher id to be revoked.
        /// </summary>
        revoke = 2,
        
        /// <summary>
        /// >> update
        /// Update existing voucher.
        /// 
        /// This extrinsic updates existing voucher: it can only extend vouchers
        /// rights in terms of balance, validity or programs to interact pool.
        /// 
        /// Can only be called by the voucher owner.
        /// 
        /// Arguments:
        /// * spender:          account id of the voucher spender;
        /// * voucher_id:       voucher id to be updated;
        /// * move_ownership:   optionally moves ownership to another account;
        /// * balance_top_up:   optionally top ups balance of the voucher from
        ///                     origins balance;
        /// * append_programs:  optionally extends pool of programs by
        ///                     `Some(programs_set)` passed or allows
        ///                     it to interact with any program by
        ///                     `None` passed;
        /// * code_uploading:   optionally allows voucher to be used to pay
        ///                     fees for `upload_code` extrinsics;
        /// * prolong_duration: optionally increases expiry block number.
        ///                     If voucher is expired, prolongs since current bn.
        ///                     Validity prolongation (since current block number
        ///                     for expired or since storage written expiry)
        ///                     should be in [MinDuration; MaxDuration], in other
        ///                     words voucher couldn't have expiry greater than
        ///                     current block number + MaxDuration.
        /// </summary>
        update = 3,
        
        /// <summary>
        /// >> decline
        /// Decline existing and not expired voucher.
        /// 
        /// This extrinsic expires voucher of the caller, if it's still active,
        /// allowing it to be revoked.
        /// 
        /// Arguments:
        /// * voucher_id:   voucher id to be declined.
        /// </summary>
        decline = 4,
    }
    
    /// <summary>
    /// >> 277 - Variant[pallet_gear_voucher.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<BaseTuple<Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Gear.Api.Generated.Types.Base.BTreeSetT1>, Substrate.NetApi.Model.Types.Primitive.Bool, Substrate.NetApi.Model.Types.Primitive.U32>>(Call.issue);
				AddTypeDecoder<BaseTuple<Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.EnumPrepaidCall>>(Call.call);
				AddTypeDecoder<BaseTuple<Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId>>(Call.revoke);
				AddTypeDecoder<BaseTuple<Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32, Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Gear.Api.Generated.Model.sp_core.crypto.AccountId32>, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128>, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Gear.Api.Generated.Types.Base.BTreeSetT1>>, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool>, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>>>(Call.update);
				AddTypeDecoder<Substrate.Gear.Api.Generated.Model.pallet_gear_voucher.@internal.VoucherId>(Call.decline);
        }
    }
}
