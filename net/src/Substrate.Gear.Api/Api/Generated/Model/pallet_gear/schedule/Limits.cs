#nullable disable
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Substrate.Gear.Api.Generated.Model.pallet_gear.schedule
{
    
    
    /// <summary>
    /// >> 623 - Composite[pallet_gear.schedule.Limits]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class Limits : BaseType
    {
        
        /// <summary>
        /// >> stack_height
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> StackHeight { get; set; }
        /// <summary>
        /// >> globals
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Globals { get; set; }
        /// <summary>
        /// >> locals
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Locals { get; set; }
        /// <summary>
        /// >> parameters
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Parameters { get; set; }
        /// <summary>
        /// >> memory_pages
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U16 MemoryPages { get; set; }
        /// <summary>
        /// >> table_size
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 TableSize { get; set; }
        /// <summary>
        /// >> table_number
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 TableNumber { get; set; }
        /// <summary>
        /// >> br_table_size
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 BrTableSize { get; set; }
        /// <summary>
        /// >> subject_len
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 SubjectLen { get; set; }
        /// <summary>
        /// >> call_depth
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 CallDepth { get; set; }
        /// <summary>
        /// >> payload_len
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 PayloadLen { get; set; }
        /// <summary>
        /// >> code_len
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 CodeLen { get; set; }
        /// <summary>
        /// >> data_segments_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 DataSegmentsAmount { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "Limits";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(StackHeight.Encode());
            result.AddRange(Globals.Encode());
            result.AddRange(Locals.Encode());
            result.AddRange(Parameters.Encode());
            result.AddRange(MemoryPages.Encode());
            result.AddRange(TableSize.Encode());
            result.AddRange(TableNumber.Encode());
            result.AddRange(BrTableSize.Encode());
            result.AddRange(SubjectLen.Encode());
            result.AddRange(CallDepth.Encode());
            result.AddRange(PayloadLen.Encode());
            result.AddRange(CodeLen.Encode());
            result.AddRange(DataSegmentsAmount.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            StackHeight = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            StackHeight.Decode(byteArray, ref p);
            Globals = new Substrate.NetApi.Model.Types.Primitive.U32();
            Globals.Decode(byteArray, ref p);
            Locals = new Substrate.NetApi.Model.Types.Primitive.U32();
            Locals.Decode(byteArray, ref p);
            Parameters = new Substrate.NetApi.Model.Types.Primitive.U32();
            Parameters.Decode(byteArray, ref p);
            MemoryPages = new Substrate.NetApi.Model.Types.Primitive.U16();
            MemoryPages.Decode(byteArray, ref p);
            TableSize = new Substrate.NetApi.Model.Types.Primitive.U32();
            TableSize.Decode(byteArray, ref p);
            TableNumber = new Substrate.NetApi.Model.Types.Primitive.U32();
            TableNumber.Decode(byteArray, ref p);
            BrTableSize = new Substrate.NetApi.Model.Types.Primitive.U32();
            BrTableSize.Decode(byteArray, ref p);
            SubjectLen = new Substrate.NetApi.Model.Types.Primitive.U32();
            SubjectLen.Decode(byteArray, ref p);
            CallDepth = new Substrate.NetApi.Model.Types.Primitive.U32();
            CallDepth.Decode(byteArray, ref p);
            PayloadLen = new Substrate.NetApi.Model.Types.Primitive.U32();
            PayloadLen.Decode(byteArray, ref p);
            CodeLen = new Substrate.NetApi.Model.Types.Primitive.U32();
            CodeLen.Decode(byteArray, ref p);
            DataSegmentsAmount = new Substrate.NetApi.Model.Types.Primitive.U32();
            DataSegmentsAmount.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
