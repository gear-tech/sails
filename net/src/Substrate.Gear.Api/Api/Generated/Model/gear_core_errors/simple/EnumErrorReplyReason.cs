#nullable disable
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Gear.Api.Generated.Model.gear_core_errors.simple
{
    
    
    /// <summary>
    /// >> ErrorReplyReason
    /// </summary>
    public enum ErrorReplyReason
    {
        
        /// <summary>
        /// >> Execution
        /// </summary>
        Execution = 0,
        
        /// <summary>
        /// >> FailedToCreateProgram
        /// </summary>
        FailedToCreateProgram = 1,
        
        /// <summary>
        /// >> InactiveActor
        /// </summary>
        InactiveActor = 2,
        
        /// <summary>
        /// >> RemovedFromWaitlist
        /// </summary>
        RemovedFromWaitlist = 3,
        
        /// <summary>
        /// >> ReinstrumentationFailure
        /// </summary>
        ReinstrumentationFailure = 4,
        
        /// <summary>
        /// >> Unsupported
        /// </summary>
        Unsupported = 255,
    }
    
    /// <summary>
    /// >> 320 - Variant[gear_core_errors.simple.ErrorReplyReason]
    /// </summary>
    public sealed class EnumErrorReplyReason : BaseEnumRust<ErrorReplyReason>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumErrorReplyReason()
        {
				AddTypeDecoder<Substrate.Gear.Api.Generated.Model.gear_core_errors.simple.EnumSimpleExecutionError>(ErrorReplyReason.Execution);
				AddTypeDecoder<Substrate.Gear.Api.Generated.Model.gear_core_errors.simple.EnumSimpleProgramCreationError>(ErrorReplyReason.FailedToCreateProgram);
				AddTypeDecoder<BaseVoid>(ErrorReplyReason.InactiveActor);
				AddTypeDecoder<BaseVoid>(ErrorReplyReason.RemovedFromWaitlist);
				AddTypeDecoder<BaseVoid>(ErrorReplyReason.ReinstrumentationFailure);
				AddTypeDecoder<BaseVoid>(ErrorReplyReason.Unsupported);
        }
    }
}
