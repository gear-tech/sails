#nullable disable
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Gear.Api.Generated.Model.pallet_gear_gas.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// The `Error` enum of this pallet.
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> Forbidden
        /// </summary>
        Forbidden = 0,
        
        /// <summary>
        /// >> NodeAlreadyExists
        /// </summary>
        NodeAlreadyExists = 1,
        
        /// <summary>
        /// >> InsufficientBalance
        /// </summary>
        InsufficientBalance = 2,
        
        /// <summary>
        /// >> NodeNotFound
        /// </summary>
        NodeNotFound = 3,
        
        /// <summary>
        /// >> NodeWasConsumed
        /// </summary>
        NodeWasConsumed = 4,
        
        /// <summary>
        /// >> ParentIsLost
        /// Errors stating that gas tree has been invalidated
        /// </summary>
        ParentIsLost = 5,
        
        /// <summary>
        /// >> ParentHasNoChildren
        /// </summary>
        ParentHasNoChildren = 6,
        
        /// <summary>
        /// >> UnexpectedConsumeOutput
        /// Output of `Tree::consume` procedure that wasn't expected.
        /// 
        /// Outputs of consumption procedure are determined. The error is returned
        /// when unexpected one occurred. That signals, that algorithm works wrong
        /// and expected invariants are not correct.
        /// </summary>
        UnexpectedConsumeOutput = 7,
        
        /// <summary>
        /// >> UnexpectedNodeType
        /// Node type that can't occur if algorithm work well
        /// </summary>
        UnexpectedNodeType = 8,
        
        /// <summary>
        /// >> ValueIsNotCaught
        /// Value must have been caught, but was missed or blocked (for more info see `ValueNode::catch_value`).
        /// </summary>
        ValueIsNotCaught = 9,
        
        /// <summary>
        /// >> ValueIsBlocked
        /// Value must have been caught or moved upstream, but was blocked (for more info see `ValueNode::catch_value`).
        /// </summary>
        ValueIsBlocked = 10,
        
        /// <summary>
        /// >> ValueIsNotBlocked
        /// Value must have been blocked, but was either moved or caught (for more info see `ValueNode::catch_value`).
        /// </summary>
        ValueIsNotBlocked = 11,
        
        /// <summary>
        /// >> ConsumedWithLock
        /// `GasTree::consume` called on node, which has some balance locked.
        /// </summary>
        ConsumedWithLock = 12,
        
        /// <summary>
        /// >> ConsumedWithSystemReservation
        /// `GasTree::consume` called on node, which has some system reservation.
        /// </summary>
        ConsumedWithSystemReservation = 13,
        
        /// <summary>
        /// >> TotalValueIsOverflowed
        /// `GasTree::create` called with some value amount leading to
        /// the total value overflow.
        /// </summary>
        TotalValueIsOverflowed = 14,
        
        /// <summary>
        /// >> TotalValueIsUnderflowed
        /// Either `GasTree::consume` or `GasTree::spent` called on a node creating
        /// negative imbalance which leads to the total value drop below 0.
        /// </summary>
        TotalValueIsUnderflowed = 15,
    }
    
    /// <summary>
    /// >> 621 - Variant[pallet_gear_gas.pallet.Error]
    /// The `Error` enum of this pallet.
    /// </summary>
    public sealed class EnumError : BaseEnum<Error>
    {
    }
}
