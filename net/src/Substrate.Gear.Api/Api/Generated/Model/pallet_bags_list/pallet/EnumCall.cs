#nullable disable
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Gear.Api.Generated.Model.pallet_bags_list.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> rebag
        /// Declare that some `dislocated` account has, through rewards or penalties, sufficiently
        /// changed its score that it should properly fall into a different bag than its current
        /// one.
        /// 
        /// Anyone can call this function about any potentially dislocated account.
        /// 
        /// Will always update the stored score of `dislocated` to the correct score, based on
        /// `ScoreProvider`.
        /// 
        /// If `dislocated` does not exists, it returns an error.
        /// </summary>
        rebag = 0,
        
        /// <summary>
        /// >> put_in_front_of
        /// Move the caller's Id directly in front of `lighter`.
        /// 
        /// The dispatch origin for this call must be _Signed_ and can only be called by the Id of
        /// the account going in front of `lighter`. Fee is payed by the origin under all
        /// circumstances.
        /// 
        /// Only works if:
        /// 
        /// - both nodes are within the same bag,
        /// - and `origin` has a greater `Score` than `lighter`.
        /// </summary>
        put_in_front_of = 1,
        
        /// <summary>
        /// >> put_in_front_of_other
        /// Same as [`Pallet::put_in_front_of`], but it can be called by anyone.
        /// 
        /// Fee is paid by the origin under all circumstances.
        /// </summary>
        put_in_front_of_other = 2,
    }
    
    /// <summary>
    /// >> 109 - Variant[pallet_bags_list.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<Substrate.Gear.Api.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress>(Call.rebag);
				AddTypeDecoder<Substrate.Gear.Api.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress>(Call.put_in_front_of);
				AddTypeDecoder<BaseTuple<Substrate.Gear.Api.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress, Substrate.Gear.Api.Generated.Model.sp_runtime.multiaddress.EnumMultiAddress>>(Call.put_in_front_of_other);
        }
    }
}
