<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <IsRoslynComponent>true</IsRoslynComponent>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <NoWarn>$(NoWarn);NU5128</NoWarn>
    <Description>Code generator for Sails.Net.</Description>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
    <PackageReference Include="PolySharp" />
  </ItemGroup>

  <!-- local build -->  
  <Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(LibraryRoot)' == ''">
    <Exec Command="cargo build -p sails-client-gen-dotnet --release" />
  </Target>

  <!-- local lib -->
  <ItemGroup Condition="'$(LibraryRoot)' == ''">
    <EmbeddedResource Include="../../../target/release/sails_client_gen_dotnet.dll" LogicalName="win-x64.sails_client_gen_dotnet.dll" Condition="$([MSBuild]::IsOSPlatform('Windows')) and Exists('../../../target/release/sails_client_gen_dotnet.dll')" />
    <EmbeddedResource Include="../../../target/release/sails_client_gen_dotnet.so" LogicalName="linux-x64.sails_client_gen_dotnet.so" Condition="$([MSBuild]::IsOSPlatform('Linux')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'X64' and Exists('../../../target/release/sails_client_gen_dotnet.so')" />
    <EmbeddedResource Include="../../../target/release/libsails_client_gen_dotnet.dylib" LogicalName="osx-x64.sails_client_gen_dotnet.dylib" Condition="$([MSBuild]::IsOSPlatform('OSX')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'X64' and Exists('../../../target/release/libsails_client_gen_dotnet.dylib')" />
    <EmbeddedResource Include="../../../target/release/libsails_client_gen_dotnet.dylib" LogicalName="osx-arm64.sails_client_gen_dotnet.dylib" Condition="$([MSBuild]::IsOSPlatform('OSX')) and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'Arm64' and Exists('../../../target/release/libsails_client_gen_dotnet.dylib')" />
</ItemGroup>

  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);EmbedLibraries</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>

  <!--for nuget publish-->
  <Target Name="EmbedLibraries">     
    <ItemGroup Condition="'$(LibraryRoot)' != ''">
      <EmbeddedResource Include="$(LibraryRoot)/win-x64/sails_client_gen_dotnet.dll" LogicalName="win-x64.sails_client_gen_dotnet.dll" />
      <EmbeddedResource Include="$(LibraryRoot)/linux-x64/libsails_client_gen_dotnet.so" LogicalName="linux-x64.sails_client_gen_dotnet.so" />
      <EmbeddedResource Include="$(LibraryRoot)/osx-x64/libsails_client_gen_dotnet.dylib" LogicalName="osx-x64.libsails_client_gen_dotnet.dylib" />
      <EmbeddedResource Include="$(LibraryRoot)/osx-arm64/libsails_client_gen_dotnet.dylib" LogicalName="osx-arm64.libsails_client_gen_dotnet.dylib" />
    </ItemGroup>
  </Target>

  
  <!-- ensures the library will be packaged as a source generator when we use `dotnet pack` -->
  <ItemGroup>
    <TfmSpecificPackageFile Include="$(OutputPath)\$(AssemblyName).dll" PackagePath="analyzers/dotnet/cs" />
  </ItemGroup>

</Project>
