---
source: rs/client-gen-dotnet/tests/generator.rs
expression: code
---
using global::Sails.Remoting;
using global::Sails.Remoting.Abstractions;
using global::Sails.Remoting.Abstractions.Core;

#pragma warning disable RCS0056 // A line is too long

namespace Service.Client;

public interface IService
 { ICall<global::Substrate.NetApi.Model.Types.Primitive.U16> DoThis(global::Substrate.NetApi.Model.Types.Primitive.U32 p1, MyParam p2);
ICall<global::Substrate.NetApi.Model.Types.Primitive.U8> DoThat(global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.U8, global::Substrate.NetApi.Model.Types.Primitive.U32> p1);
 }

 public partial class Service : IService
 { private readonly IRemoting remoting;

 public Service(IRemoting remoting) { this.remoting = remoting; }

/// <inheritdoc/>
 public ICall<global::Substrate.NetApi.Model.Types.Primitive.U16> DoThis(global::Substrate.NetApi.Model.Types.Primitive.U32 p1, MyParam p2) { return new RemotingAction<global::Substrate.NetApi.Model.Types.Primitive.U16>( this.remoting, [28, 83, 101, 114, 118, 105, 99, 101, 24, 68, 111, 84, 104, 105, 115], new global::Substrate.NetApi.Model.Types.Base.BaseTupleRust(p1, p2) ); }
/// <inheritdoc/>
 public ICall<global::Substrate.NetApi.Model.Types.Primitive.U8> DoThat(global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.U8, global::Substrate.NetApi.Model.Types.Primitive.U32> p1) { return new RemotingAction<global::Substrate.NetApi.Model.Types.Primitive.U8>( this.remoting, [28, 83, 101, 114, 118, 105, 99, 101, 24, 68, 111, 84, 104, 97, 116], new global::Substrate.NetApi.Model.Types.Base.BaseTupleRust(p1) ); } }

public enum MyParam2 { Variant1,
 Variant2,
 Variant3,
 Variant4,
 Variant5,
 } public sealed partial class EnumMyParam2 : global::Substrate.NetApi.Model.Types.Base.BaseEnumRust<MyParam2> { public EnumMyParam2() { this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Base.BaseVoid>(MyParam2.Variant1);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Primitive.U32>(MyParam2.Variant2);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Primitive.U32>(MyParam2.Variant3);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.U8, global::Substrate.NetApi.Model.Types.Primitive.U32>>(MyParam2.Variant4);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Base.BaseVec<global::Substrate.NetApi.Model.Types.Primitive.U8>>>(MyParam2.Variant5);
 } }
