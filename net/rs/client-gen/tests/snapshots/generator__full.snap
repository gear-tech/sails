---
source: client-gen/tests/generator.rs
expression: "gen(IDL, \"Service\")"
---
using global::Sails.Remoting;
using global::Sails.Remoting.Abstractions;
using global::Sails.Remoting.Abstractions.Core;
using global::System;
using global::System.Collections.Generic;

#pragma warning disable RCS0056 // A line is too long

namespace Service.Client;

public interface IServiceFactory
 {
/// <summary>
/// New constructor
/// </summary>
IActivation New(global::Substrate.NetApi.Model.Types.Primitive.U32 a);
 }

 public sealed partial class ServiceFactory : IServiceFactory
 {

 private readonly IRemoting remoting;

 public ServiceFactory(IRemoting remoting)
 { this.remoting = remoting; }

/// <inheritdoc/>
 public IActivation New(global::Substrate.NetApi.Model.Types.Primitive.U32 a) { return new RemotingAction<global::Substrate.NetApi.Model.Types.Primitive.U32>( this.remoting, [12, 78, 101, 119], new global::Substrate.NetApi.Model.Types.Primitive.U32(a)); }

 }

public interface IService
 { ICall<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.U32>> DoThis(global::Substrate.NetApi.Model.Types.Primitive.U32 p1, global::Substrate.NetApi.Model.Types.Primitive.Str p2, global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Base.BaseOpt<global::Substrate.NetApi.Model.Types.Primitive.Str>, global::Substrate.NetApi.Model.Types.Primitive.U8> p3, ThisThatSvcAppTupleStruct p4);
ICall<global::Substrate.Gear.Client.NetApi.Model.Types.Base.BaseResult<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.U32>, global::Substrate.NetApi.Model.Types.Primitive.Str>> DoThat(ThisThatSvcAppDoThatParam param);
IQuery<global::Substrate.NetApi.Model.Types.Primitive.U32> This(global::Substrate.NetApi.Model.Types.Base.BaseVec<global::Substrate.NetApi.Model.Types.Primitive.U16> v1);
IQuery<global::Substrate.Gear.Client.NetApi.Model.Types.Base.BaseResult<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.Str>> That(global::Substrate.NetApi.Model.Types.Base.BaseVoid v1);
 }

 public sealed partial class Service : IService
 { private readonly IRemoting remoting;

 public Service(IRemoting remoting) { this.remoting = remoting; }

/// <inheritdoc/>
 public ICall<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.U32>> DoThis(global::Substrate.NetApi.Model.Types.Primitive.U32 p1, global::Substrate.NetApi.Model.Types.Primitive.Str p2, global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Base.BaseOpt<global::Substrate.NetApi.Model.Types.Primitive.Str>, global::Substrate.NetApi.Model.Types.Primitive.U8> p3, ThisThatSvcAppTupleStruct p4) { return new RemotingAction<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.U32>>( this.remoting, [28, 83, 101, 114, 118, 105, 99, 101, 24, 68, 111, 84, 104, 105, 115], new global::Substrate.NetApi.Model.Types.Base.BaseTupleRust(p1, p2, p3, p4) ); }
/// <inheritdoc/>
 public ICall<global::Substrate.Gear.Client.NetApi.Model.Types.Base.BaseResult<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.U32>, global::Substrate.NetApi.Model.Types.Primitive.Str>> DoThat(ThisThatSvcAppDoThatParam param) { return new RemotingAction<global::Substrate.Gear.Client.NetApi.Model.Types.Base.BaseResult<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.U32>, global::Substrate.NetApi.Model.Types.Primitive.Str>>( this.remoting, [28, 83, 101, 114, 118, 105, 99, 101, 24, 68, 111, 84, 104, 97, 116], new global::Substrate.NetApi.Model.Types.Base.BaseTupleRust(param) ); }
/// <inheritdoc/>
 public IQuery<global::Substrate.NetApi.Model.Types.Primitive.U32> This(global::Substrate.NetApi.Model.Types.Base.BaseVec<global::Substrate.NetApi.Model.Types.Primitive.U16> v1) { return new RemotingAction<global::Substrate.NetApi.Model.Types.Primitive.U32>( this.remoting, [28, 83, 101, 114, 118, 105, 99, 101, 16, 84, 104, 105, 115], new global::Substrate.NetApi.Model.Types.Base.BaseTupleRust(v1) ); }
/// <inheritdoc/>
 public IQuery<global::Substrate.Gear.Client.NetApi.Model.Types.Base.BaseResult<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.Str>> That(global::Substrate.NetApi.Model.Types.Base.BaseVoid v1) { return new RemotingAction<global::Substrate.Gear.Client.NetApi.Model.Types.Base.BaseResult<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.Str>>( this.remoting, [28, 83, 101, 114, 118, 105, 99, 101, 16, 84, 104, 97, 116], new global::Substrate.NetApi.Model.Types.Base.BaseTupleRust(v1) ); } }

public enum ServiceEvents {
/// <summary>
/// `This` Done
/// </summary>
 ThisDone,
/// <summary>
/// `That` Done too
/// </summary>
 ThatDone,
 }

 public sealed partial class EnumServiceEvents : global::Substrate.NetApi.Model.Types.Base.BaseEnumRust<ServiceEvents> { public EnumServiceEvents() { this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Primitive.U32>(ServiceEvents.ThisDone);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Primitive.Str>(ServiceEvents.ThatDone);
 } }

 public sealed partial class ServiceListener : IRemotingListener<EnumServiceEvents> { private static readonly byte[][] EventRoutes = [ [28, 83, 101, 114, 118, 105, 99, 101, 32, 84, 104, 105, 115, 68, 111, 110, 101],[28, 83, 101, 114, 118, 105, 99, 101, 32, 84, 104, 97, 116, 68, 111, 110, 101], ];

 private readonly global::Sails.Remoting.Abstractions.Core.IRemotingListener remoting;

 public ServiceListener(global::Sails.Remoting.Abstractions.Core.IRemotingListener remoting) { this.remoting = remoting; }

 public async global::System.Collections.Generic.IAsyncEnumerable<EnumServiceEvents> ListenAsync([global::System.Runtime.CompilerServices.EnumeratorCancellation] global::System.Threading.CancellationToken cancellationToken = default) { await foreach (var bytes in this.remoting.ListenAsync(cancellationToken)) { byte idx = 0; foreach (var route in EventRoutes) { if (route.Length > bytes.Length) { continue; } if (route.AsSpan().SequenceEqual(bytes.AsSpan()[..route.Length])) { var bytesLength = bytes.Length - route.Length + 1; var data = new byte[bytesLength]; data[0] = idx; Buffer.BlockCopy(bytes, route.Length, data, 1, bytes.Length - route.Length); var p = 0; EnumServiceEvents ev = new(); ev.Decode(bytes, ref p); yield return ev; } idx++; } } } }

/// <summary>
/// ThisThatSvcAppTupleStruct docs
/// </summary>
public sealed partial class ThisThatSvcAppTupleStruct : global::Substrate.NetApi.Model.Types.Base.BaseType { [System.Diagnostics.CodeAnalysis.AllowNull]
 public global::Substrate.NetApi.Model.Types.Primitive.Bool Value { get; set; }
/// <inheritdoc/>
 public override string TypeName() => "ThisThatSvcAppTupleStruct";
/// <inheritdoc/>
 public override byte[] Encode() { var result = new List<byte>(); result.AddRange(this.Value.Encode());
 return result.ToArray(); }
/// <inheritdoc/>
 public override void Decode(byte[] byteArray, ref int p) { var start = p; this.Value = new global::Substrate.NetApi.Model.Types.Primitive.Bool();
 this.Value.Decode(byteArray, ref p);
 var bytesLength = p - start; this.TypeSize = bytesLength; this.Bytes = new byte[bytesLength]; Array.Copy(byteArray, start, this.Bytes, 0, bytesLength); } }

/// <summary>
/// ThisThatSvcAppDoThatParam docs
/// </summary>
public sealed partial class ThisThatSvcAppDoThatParam : global::Substrate.NetApi.Model.Types.Base.BaseType {
/// <summary>
/// field `query`
/// </summary>
[System.Diagnostics.CodeAnalysis.AllowNull]
 public global::Substrate.NetApi.Model.Types.Primitive.U32 Query { get; set; }
/// <summary>
/// field `result`
/// </summary>
[System.Diagnostics.CodeAnalysis.AllowNull]
 public global::Substrate.NetApi.Model.Types.Primitive.Str Result { get; set; }
/// <summary>
/// field `p3`
/// </summary>
[System.Diagnostics.CodeAnalysis.AllowNull]
 public EnumThisThatSvcAppManyVariants P3 { get; set; }
/// <inheritdoc/>
 public override string TypeName() => "ThisThatSvcAppDoThatParam";
/// <inheritdoc/>
 public override byte[] Encode() { var result = new List<byte>(); result.AddRange(this.Query.Encode());
result.AddRange(this.Result.Encode());
result.AddRange(this.P3.Encode());
 return result.ToArray(); }
/// <inheritdoc/>
 public override void Decode(byte[] byteArray, ref int p) { var start = p; this.Query = new global::Substrate.NetApi.Model.Types.Primitive.U32();
 this.Query.Decode(byteArray, ref p);
this.Result = new global::Substrate.NetApi.Model.Types.Primitive.Str();
 this.Result.Decode(byteArray, ref p);
this.P3 = new EnumThisThatSvcAppManyVariants();
 this.P3.Decode(byteArray, ref p);
 var bytesLength = p - start; this.TypeSize = bytesLength; this.Bytes = new byte[bytesLength]; Array.Copy(byteArray, start, this.Bytes, 0, bytesLength); } }

/// <summary>
/// ThisThatSvcAppManyVariants docs
/// </summary>
public enum ThisThatSvcAppManyVariants {
/// <summary>
/// variant `One`
/// </summary>
 One,
/// <summary>
/// variant `Two`
/// </summary>
 Two,
 Three,
 Four,
 Five,
 Six,
 } public sealed partial class EnumThisThatSvcAppManyVariants : global::Substrate.NetApi.Model.Types.Base.BaseEnumRust<ThisThatSvcAppManyVariants> { public EnumThisThatSvcAppManyVariants() { this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Base.BaseVoid>(ThisThatSvcAppManyVariants.One);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Primitive.U32>(ThisThatSvcAppManyVariants.Two);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Base.BaseOpt<global::Substrate.NetApi.Model.Types.Primitive.U32>>(ThisThatSvcAppManyVariants.Three);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.U32, global::Substrate.NetApi.Model.Types.Base.BaseOpt<global::Substrate.NetApi.Model.Types.Primitive.U16>>>(ThisThatSvcAppManyVariants.Four);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Base.BaseTuple<global::Substrate.NetApi.Model.Types.Primitive.Str, global::Substrate.NetApi.Model.Types.Primitive.U32>>(ThisThatSvcAppManyVariants.Five);
this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Primitive.U32>(ThisThatSvcAppManyVariants.Six);
 } }

public enum T { One,
 } public sealed partial class EnumT : global::Substrate.NetApi.Model.Types.Base.BaseEnumRust<T> { public EnumT() { this.AddTypeDecoder<global::Substrate.NetApi.Model.Types.Base.BaseVoid>(T.One);
 } }
