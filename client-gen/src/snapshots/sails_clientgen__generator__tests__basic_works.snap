---
source: client-gen/src/generator.rs
expression: generate(program).unwrap()
---
// Code generated by sails-client-gen. DO NOT EDIT.
use parity_scale_codec::{Decode, Encode};
#[allow(unused_imports)]
use sails_rtl::collections::BTreeMap;
use sails_rtl::{String, *};
#[allow(unused_imports)]
use sails_sender::{Call, CreateProgramCall, GStdSender};
pub trait Service {
    fn do_this(&mut self, p1: u32, p2: MyParam) -> Call<u16>;
    fn do_that(&mut self, p1: (u8, u32)) -> Call<u8>;
}

#[derive(Clone)]
pub struct Client {
    sender: GStdSender,
}

impl Client {
    pub fn new(sender: GStdSender) -> Self {
        Self { sender }
    }
}

impl Service for Client {
    fn do_this(&mut self, p1: u32, p2: MyParam) -> Call<u16> {
        Call::new(&self.sender, "DoThis", (p1, p2))
    }
    fn do_that(&mut self, p1: (u8, u32)) -> Call<u8> {
        Call::new(&self.sender, "DoThat", p1)
    }
}
#[derive(PartialEq, Debug, Encode, Decode)]
pub struct MyParam {
    f1: u32,
    f2: Vec<String>,
    f3: Option<(u8, u32)>,
}
#[derive(PartialEq, Debug, Encode, Decode)]
pub enum MyParam2 {
    Variant1,
    Variant2(u32),
    Variant3((u32,)),
    Variant4((u8, u32)),
    Variant5 { f1: String, f2: Vec<u8> },
}

